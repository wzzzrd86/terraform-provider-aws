// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package rds

import (
	"context"

	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{
		{
			Factory: newResourceCluster,
		},
		{
			Factory: newResourceExportTask,
		},
	}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  DataSourceClusterSnapshot,
			TypeName: "aws_db_cluster_snapshot",
		},
		{
			Factory:  DataSourceEventCategories,
			TypeName: "aws_db_event_categories",
		},
		{
			Factory:  DataSourceInstance,
			TypeName: "aws_db_instance",
		},
		{
			Factory:  DataSourceInstances,
			TypeName: "aws_db_instances",
		},
		{
			Factory:  DataSourceProxy,
			TypeName: "aws_db_proxy",
		},
		{
			Factory:  DataSourceSnapshot,
			TypeName: "aws_db_snapshot",
		},
		{
			Factory:  DataSourceSubnetGroup,
			TypeName: "aws_db_subnet_group",
		},
		{
			Factory:  DataSourceCertificate,
			TypeName: "aws_rds_certificate",
		},
		{
			Factory:  DataSourceCluster,
			TypeName: "aws_rds_cluster",
		},
		{
			Factory:  DataSourceClusters,
			TypeName: "aws_rds_clusters",
		},
		{
			Factory:  DataSourceEngineVersion,
			TypeName: "aws_rds_engine_version",
		},
		{
			Factory:  DataSourceOrderableInstance,
			TypeName: "aws_rds_orderable_db_instance",
		},
		{
			Factory:  DataSourceReservedOffering,
			TypeName: "aws_rds_reserved_instance_offering",
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  ResourceClusterSnapshot,
			TypeName: "aws_db_cluster_snapshot",
		},
		{
			Factory:  ResourceEventSubscription,
			TypeName: "aws_db_event_subscription",
		},
		{
			Factory:  ResourceInstance,
			TypeName: "aws_db_instance",
		},
		{
			Factory:  ResourceInstanceAutomatedBackupsReplication,
			TypeName: "aws_db_instance_automated_backups_replication",
		},
		{
			Factory:  ResourceInstanceRoleAssociation,
			TypeName: "aws_db_instance_role_association",
		},
		{
			Factory:  ResourceOptionGroup,
			TypeName: "aws_db_option_group",
		},
		{
			Factory:  ResourceParameterGroup,
			TypeName: "aws_db_parameter_group",
		},
		{
			Factory:  ResourceProxy,
			TypeName: "aws_db_proxy",
		},
		{
			Factory:  ResourceProxyDefaultTargetGroup,
			TypeName: "aws_db_proxy_default_target_group",
		},
		{
			Factory:  ResourceProxyEndpoint,
			TypeName: "aws_db_proxy_endpoint",
		},
		{
			Factory:  ResourceProxyTarget,
			TypeName: "aws_db_proxy_target",
		},
		{
			Factory:  ResourceSecurityGroup,
			TypeName: "aws_db_security_group",
		},
		{
			Factory:  ResourceSnapshot,
			TypeName: "aws_db_snapshot",
		},
		{
			Factory:  ResourceSnapshotCopy,
			TypeName: "aws_db_snapshot_copy",
		},
		{
			Factory:  ResourceSubnetGroup,
			TypeName: "aws_db_subnet_group",
		},
		{
			Factory:  ResourceClusterActivityStream,
			TypeName: "aws_rds_cluster_activity_stream",
		},
		{
			Factory:  ResourceClusterEndpoint,
			TypeName: "aws_rds_cluster_endpoint",
		},
		{
			Factory:  ResourceClusterInstance,
			TypeName: "aws_rds_cluster_instance",
		},
		{
			Factory:  ResourceClusterParameterGroup,
			TypeName: "aws_rds_cluster_parameter_group",
		},
		{
			Factory:  ResourceClusterRoleAssociation,
			TypeName: "aws_rds_cluster_role_association",
		},
		{
			Factory:  ResourceGlobalCluster,
			TypeName: "aws_rds_global_cluster",
		},
		{
			Factory:  ResourceReservedInstance,
			TypeName: "aws_rds_reserved_instance",
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.RDS
}

var ServicePackage = &servicePackage{}
